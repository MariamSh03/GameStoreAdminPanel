// <auto-generated />
using System;
using AdminPanel.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPanel.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminPanel.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("AdminPanel.Entity.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("526d0fd8-cc70-4c02-ad59-038005e5fb9a"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("b3ad12e4-dd75-4d39-aac5-147bbc6ca337"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("8a401a57-5661-447d-8861-88d1b05ca1f2"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("a1720151-33cd-42e0-949c-70587a6e4e92"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("a8d4ec20-0105-4160-b3ae-35079c09014d"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("978daae7-cc5b-4fe9-a9e2-2fa612d23225"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("b360d115-bbba-4672-af1a-d214271d8f6f"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("2409f670-5ab8-4d2d-9d7d-d0eec9783bbc"),
                            Name = "RTS",
                            ParentGenreId = new Guid("526d0fd8-cc70-4c02-ad59-038005e5fb9a")
                        },
                        new
                        {
                            Id = new Guid("772cc8ed-7c40-446b-84cc-e634b810f80d"),
                            Name = "TBS",
                            ParentGenreId = new Guid("526d0fd8-cc70-4c02-ad59-038005e5fb9a")
                        },
                        new
                        {
                            Id = new Guid("d2fbe2f9-6985-4459-8c32-696fa8ef4059"),
                            Name = "Rally",
                            ParentGenreId = new Guid("a1720151-33cd-42e0-949c-70587a6e4e92")
                        },
                        new
                        {
                            Id = new Guid("47dccd2a-c5c7-4810-9a7f-76fbc0f102ab"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("a1720151-33cd-42e0-949c-70587a6e4e92")
                        },
                        new
                        {
                            Id = new Guid("4daf3454-d58f-4f55-9b06-a5aac939866d"),
                            Name = "Formula",
                            ParentGenreId = new Guid("a1720151-33cd-42e0-949c-70587a6e4e92")
                        },
                        new
                        {
                            Id = new Guid("2f4e1202-ad61-4bc9-917e-ce77186317ee"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("a1720151-33cd-42e0-949c-70587a6e4e92")
                        },
                        new
                        {
                            Id = new Guid("0dcc04f9-a4fd-4973-89df-7b438dcdbf75"),
                            Name = "FPS",
                            ParentGenreId = new Guid("a8d4ec20-0105-4160-b3ae-35079c09014d")
                        },
                        new
                        {
                            Id = new Guid("8ee402ca-f836-4c0f-b6e6-284d7d6daeea"),
                            Name = "TPS",
                            ParentGenreId = new Guid("a8d4ec20-0105-4160-b3ae-35079c09014d")
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.PlatformEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5aebf57f-5b0d-49e6-bcd8-3aeb223006cb"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("b70d0a43-6ae4-40df-8f1a-c3f6265dc9bb"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("b6becb13-98ea-48a6-a5a2-2418ab89748a"),
                            Type = "Console"
                        },
                        new
                        {
                            Id = new Guid("d9b40e7f-54a1-4529-85f8-08345ea44374"),
                            Type = "Browser"
                        });
                });

            modelBuilder.Entity("AdminPanel.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPanel.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("AdminPanel.Entity.GameEntity", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPanel.Entity.PlatformEntity", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
